{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe31Dcd211F5413D381E1966aaB4a2BeD63951329",
      "txHash": "0xeadadef34cdd5360cdc254d78c21dcc4020f7f158964b4cbdf6c695f7c1481b4",
      "kind": "uups"
    },
    {
      "address": "0xf2810d87c50717C26c8A74E90D9C1dD628d19184",
      "txHash": "0xf1eb03d4bc08f6d5c4b3e06b344e0cef9ad5be8de9d932581a63fe9589b7baa2",
      "kind": "uups"
    },
    {
      "address": "0xd98F10aC3fccCB28AA6145fda2Ce36ce03E695AF",
      "txHash": "0x98661e9d454a65942ff3e88a73429003db156b62879d64eb4371825a62de51c3",
      "kind": "uups"
    },
    {
      "address": "0x4AaA342A5c129324d927AA54F0cAD37e8571B5D3",
      "txHash": "0x6f735577d092e23425363e478f4579211383b51c3352964e5d377b0000f92af6",
      "kind": "uups"
    }
  ],
  "impls": {
    "343b70116098f29e17e7ba5c9d0bce10f9e1f81addc228787d53320113bd87ba": {
      "address": "0xc335BDdcC54eB46f5CCC23cFB7471F7660f34001",
      "txHash": "0x831d7a1a0d943bc987429f3da1ec73f20f8feabd453f8f136d7d6201fd8f018c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "rewardsToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20Upgradeable)1332",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:24"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC721Upgradeable)1765",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:25"
          },
          {
            "label": "rewardsPerHour",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:45"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_struct(Staker)5611_storage)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:48"
          },
          {
            "label": "stakedIds",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:51"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:52"
          },
          {
            "label": "timeStaked",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:53"
          },
          {
            "label": "__isStaked",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(BitMap)3255_storage",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:55"
          },
          {
            "label": "__stakers",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(AddressSet)3711_storage",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:56"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1332": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721Upgradeable)1765": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)5611_storage)": {
            "label": "mapping(address => struct ERC721Staking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3711_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3396_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)3255_storage": {
            "label": "struct BitMapsUpgradeable.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3396_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Staker)5611_storage": {
            "label": "struct ERC721Staking.Staker",
            "members": [
              {
                "label": "amountStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1ac3c43bc829d417b50f85cf2960de7099ce06a935355b5a695ed07c74061af8": {
      "address": "0x0DCf926b8D91B2632d852421F1fc44aB0890f6E5",
      "txHash": "0x3e9c4367af82ece1a320b9aa5403c735be0dcf77a2433d93eb127e0b7905ad09",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "rewardsToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20Upgradeable)1307",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:26"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC721Upgradeable)1758",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:27"
          },
          {
            "label": "rewardsPerHour",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:47"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_struct(Staker)4035_storage)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:50"
          },
          {
            "label": "stakedIds",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:53"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:54"
          },
          {
            "label": "timeStaked",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:55"
          },
          {
            "label": "__isStaked",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(BitMap)3248_storage",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:57"
          },
          {
            "label": "__stakers",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(AddressSet)3704_storage",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1307": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721Upgradeable)1758": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)4035_storage)": {
            "label": "mapping(address => struct ERC721Staking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3704_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3389_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)3248_storage": {
            "label": "struct BitMapsUpgradeable.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3389_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Staker)4035_storage": {
            "label": "struct ERC721Staking.Staker",
            "members": [
              {
                "label": "amountStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f7e9593057f6fe39d4c4a7fec4c89926fcb955c1aa6a6f7190b2046558c358d7": {
      "address": "0x2772051ce4183F15B7c4722f8f101bd5d7e8ad73",
      "txHash": "0xa8a8df27ca60aa1913c8f666fece9a47f1c25b36cb3950f510097c5f76b6374e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "rewardsToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20Upgradeable)1307",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:27"
          },
          {
            "label": "nftCollection",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC721Upgradeable)1758",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:28"
          },
          {
            "label": "rewardsPerHour",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:48"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_struct(Staker)4039_storage)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:51"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:55"
          },
          {
            "label": "timeStaked",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:56"
          },
          {
            "label": "__isStaked",
            "offset": 0,
            "slot": "307",
            "type": "t_struct(BitMap)3248_storage",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:58"
          },
          {
            "label": "__stakedIds",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_struct(UintSet)3861_storage)",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:60"
          },
          {
            "label": "__stakers",
            "offset": 0,
            "slot": "309",
            "type": "t_struct(AddressSet)3704_storage",
            "contract": "ERC721Staking",
            "src": "contracts/NFTStaking.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1307": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721Upgradeable)1758": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)4039_storage)": {
            "label": "mapping(address => struct ERC721Staking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3861_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3704_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3389_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BitMap)3248_storage": {
            "label": "struct BitMapsUpgradeable.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3389_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Staker)4039_storage": {
            "label": "struct ERC721Staking.Staker",
            "members": [
              {
                "label": "amountStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(UintSet)3861_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3389_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
